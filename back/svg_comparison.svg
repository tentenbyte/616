<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="400" xmlns="http://www.w3.org/2000/svg">
  <style>
    .demo-box {
      cursor: pointer;
      transition: all 0.3s ease;
    }
    .demo-box:hover {
      transform: scale(1.1);
    }
    .js-demo:hover {
      fill: yellow;
    }
    .css-demo:hover {
      fill: lightgreen;
    }
  </style>
  
  <!-- 标题 -->
  <text x="400" y="30" text-anchor="middle" font-size="24" font-weight="bold">
    SVG交互方式对比演示
  </text>
  
  <!-- 纯SVG -->
  <g transform="translate(50, 80)">
    <text x="100" y="20" text-anchor="middle" font-size="16" font-weight="bold">1. 纯SVG动画</text>
    <rect x="50" y="40" width="100" height="60" fill="lightblue" stroke="blue" stroke-width="2">
      <animate attributeName="width" values="100;120;100" dur="2s" repeatCount="indefinite"/>
    </rect>
    <text x="100" y="75" text-anchor="middle" font-size="12">自动宽度动画</text>
  </g>
  
  <!-- CSS交互 -->
  <g transform="translate(300, 80)">
    <text x="100" y="20" text-anchor="middle" font-size="16" font-weight="bold">2. CSS交互</text>
    <rect class="demo-box css-demo" x="50" y="40" width="100" height="60" fill="lightcoral" stroke="red" stroke-width="2"/>
    <text x="100" y="75" text-anchor="middle" font-size="12">悬停变色+缩放</text>
  </g>
  
  <!-- JavaScript交互 -->
  <g transform="translate(550, 80)">
    <text x="100" y="20" text-anchor="middle" font-size="16" font-weight="bold">3. JavaScript控制</text>
    <rect id="js-demo" class="demo-box" x="50" y="40" width="100" height="60" fill="lightgreen" stroke="green" stroke-width="2" onclick="changeColor()"/>
    <text x="100" y="75" text-anchor="middle" font-size="12">点击随机颜色</text>
  </g>
  
  <!-- 复合交互演示 -->
  <g transform="translate(200, 200)">
    <text x="200" y="20" text-anchor="middle" font-size="18" font-weight="bold">4. 复合交互（SVG+CSS+JS）</text>
    
    <!-- 交互式进度条 -->
    <rect x="50" y="50" width="300" height="20" fill="#f0f0f0" stroke="#ccc" rx="10"/>
    <rect id="progress-bar" x="50" y="50" width="0" height="20" fill="linear-gradient(90deg, #4CAF50, #45a049)" rx="10">
      <animate attributeName="width" values="0;300;0" dur="4s" repeatCount="indefinite"/>
    </rect>
    
    <!-- 交互式按钮 -->
    <rect id="control-btn" x="150" y="90" width="100" height="40" fill="#2196F3" stroke="#1976D2" rx="5" class="demo-box" onclick="controlAnimation()"/>
    <text x="200" y="115" text-anchor="middle" fill="white" font-weight="bold">控制动画</text>
    
    <!-- 状态显示 -->
    <text id="status-text" x="200" y="150" text-anchor="middle" font-size="14" fill="#666">
      状态：运行中
    </text>
  </g>
  
  <!-- 说明文字 -->
  <g transform="translate(50, 320)">
    <text x="0" y="0" font-size="14" font-weight="bold" fill="#333">💡 技术说明：</text>
    <text x="0" y="20" font-size="12" fill="#666">• SVG本身支持&lt;animate&gt;标签实现动画</text>
    <text x="0" y="35" font-size="12" fill="#666">• CSS可以控制SVG元素的样式和过渡效果</text>
    <text x="0" y="50" font-size="12" fill="#666">• JavaScript提供完整的编程控制能力</text>
    <text x="0" y="65" font-size="12" fill="#666">• 三者结合可以创建复杂的交互体验</text>
  </g>
  
  <script>
    <![CDATA[
    let colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#98D8C8', '#F7DC6F'];
    let currentIndex = 0;
    let isAnimating = true;
    
    function changeColor() {
      const rect = document.getElementById('js-demo');
      currentIndex = (currentIndex + 1) % colors.length;
      rect.setAttribute('fill', colors[currentIndex]);
    }
    
    function controlAnimation() {
      const progressBar = document.getElementById('progress-bar');
      const button = document.getElementById('control-btn');
      const statusText = document.getElementById('status-text');
      
      if (isAnimating) {
        // 暂停动画
        progressBar.pauseAnimations();
        button.setAttribute('fill', '#f44336');
        statusText.textContent = '状态：已暂停';
        isAnimating = false;
      } else {
        // 恢复动画
        progressBar.unpauseAnimations();
        button.setAttribute('fill', '#2196F3');
        statusText.textContent = '状态：运行中';
        isAnimating = true;
      }
    }
    
    // 初始化
    document.addEventListener('DOMContentLoaded', function() {
      console.log('SVG交互系统初始化完成！');
    });
    ]]>
  </script>
</svg>